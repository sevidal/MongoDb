Expresiones Lambda
Funciones sin nombre = Funciones anónimas
ESto es lo que ha pasado el Jordi Torrent del ejercicio de ayer

Guia Examen:
https://university.mongodb.com/exam/guide


https://docs.mongodb.com/manual/core/databases-and-collections/
Crear condiciones de forma implícita:
    db.myNewCollection2.insertOne( { x: 1 } )
    db.myNewCollection3.createIndex( { y: 1 } )

Explicita : https://docs.mongodb.com/manual/reference/method/db.createCollection/#db.createCollection
    db.createCollection()


Json validator schema:
https://www.jsonschemavalidator.net/

Schema Validation (https://docs.mongodb.com/manual/core/schema-validation/)
Especificar restricciones por cada columna.

A nivel de examen no sale mucho de esto pero si conocerlo.


Types (https://docs.mongodb.com/manual/reference/bson-types/)

Los Types los tratas como clases de JavaScript
var a = new Timestamp(); (por ejmplo)


CRUD Operations (https://docs.mongodb.com/manual/crud)
Update
$set: para especificar cambio

link para crear strored procedures: http://pointbeing.net/weblog/2010/08/getting-started-with-stored-procedures-in-mongodb.html
Pregunta examen:
So in MongoDB, a stored procedure is really just a JavaScript function, 
which must be stored in a special collection named db.system.js

Todas las funciones se guardan en una coleción especial db.system.js de la bbdd
Para verlas:
db.system.js.find()


db.loadServerScripts();
var x= addNumbers(5,5);
print(x);





Differences Between Interactive and Scripted mongo
https://docs.mongodb.com/manual/tutorial/write-scripts-for-the-mongo-shell/
https://docs.mongodb.com/manual/tutorial/write-scripts-for-the-mongo-shell/#opening-new-connections
Ver modulo de Differences Between Interactive and Scripted

Por defecto: (pregunta examen)
El batch de salida de un find es de 20 registros


En el while el cursor tiene dos metodos: cursor.hasNext,cursor.next()

La funcion printjson() para que me lo muestre en formato json


Tablas relacionadas (foreignkey)
https://docs.mongodb.com/manual/applications/data-models-relationships/
Query on Embedded/Nested Documents

mongoDB Many-to-Many Relationship Data Modeling
http://blog.markstarkman.com/blog/2011/09/15/mongodb-many-to-many-relationship-data-modeling/


Estos dos temas se han de mirar para el examen (son los dos temas más complicados)
Sharding
Clustering (replication set)


WiredTiger Storage Engine
https://docs.mongodb.com/manual/core/wiredtiger/

la WiredTiger Storage Engine seria la storage.engine por defecto. En el fichero .cfg se puede ponert
MMAPv1 deprecated ahora es Wired WiredTiger

A nivel de documento no existe en MongoDb las transacciones.
A nivel de documento tengo Concurrencia, no hay bloqueos: 
As a result, multiple clients can modify different documents of a collection at the same time

Los bloqueos son a nivel de colecciones, db o global (modificar tablas por ejemplo)
WiredTiger uses optimistic concurrency control. WiredTiger uses only intent locks at the global, database and collection levels


Snapshots and Checkpoints (todo esto es de sistema)
Son vistas de control...te permite tirar atrás a vistas anteriores.
Checkpoints...puntos de control dentro de las transacciones...(como no hay) pero te permite volver a un punto


Journal (Journaling): transaction log

You can disable journaling for standalone instances by setting storage.journal.enabled to false

Compression y Memory Use no sale tanto en examen

Indices
https://www.genbeta.com/desarrollo/mongodb-creacion-y-utilizacion-de-indices

Los documentos se van guardando de forma arbitraria.
Por defecto no hay índices...hasta que hago createindex
Para hacer insert mejor no indices...para búsquedas hay que tenerlos...
Para mejorar el rendimiento lo mejor son los Indices

La estructura de los indices es en formato B-tree


Sharding: (tb se le llama escalamiento horizontal)
https://charlascylon.com/2014-01-30-tutorial-mongodb-explicando-el-sharding-con-una
Particionado en distintas instancias

Mongos.exe (router de MongoDb) es el repartidor y lo hace a partir de una shard key
Mongos siempre va vinculado con un Config Servers que es donde está toda la información se los Shard

Funciona por un sistema de rangos: range based aproach
Chuncks  (rangos)
Sharding es a nivel de Base de datos no de colecciones (la configuración). Puedo especificar que collecciones tienen o no sharding.

Las colecciones que no tienen sharding van al primer shard de la arquitectura.

Mongos es "stateless" (no persiste, sin estado). haces la petición, busca, responde y se para el proceso

"scatter/gather operation" búsqueda sin estar en shard key...busca en todas


Replication
Master-Slave replication

Replica set: Conjunto de servidores replicados. No le llaman cluster sino Replica set
Cada Shard es un Replica set

Los replicas set suelen ser de tres: master, slave y arbitro

Replication factor

HA: High available
Failover Cluster